// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`Streaming Markdown Parser Code blocks inside of lists: optimistic-code-block-parsing-input-chunks 1`] = `
[
  "",
  "",
  "",
  "I",
  "nli",
  "ne co",
  "de: ",
  "",
  "[7m",
  " ",
  "<tick",
  ">\`<ti",
  "ck>",
  " ",
  "[27m",
  " / ",
  "",
  "[7m",
  " ",
  "inline",
  " test",
  " \` t",
  "est",
  " ",
  "[27m",
  " ",
  "",
  
"
"
,
  "",
  "",
  
"
"
,
  "",
  "  â€¢ ",
  "H",
  "ere's",
  " a Py",
  "thon ",
  "funct",
  "ion t",
  "o gre",
  "et so",
  "meone",
  ":",
  
"

"
,
  "",
  
"   [2m\`\`\`python[22m
"
,
  " ",
  "  def",
  " gree",
  "t(nam",
  
"e):
 "
,
  "     ",
  " retu",
  "rn f"",
  "Hello",
  ", {na",
  "me}!"",
  
"
   "
,
  
"
   pr"
,
  "int(g",
  "reet(",
  ""Worl",
  "d"))",
  
"
   "
,
  
"
   [2m\`\`\`[22m"
,
  "",
  "",
  "",
  "",
  "",
  "",
  
"
"
,
  "",
  "",
  
"
"
,
  "",
  "  â€¢ ",
  "Now",
  ", let",
  "'s tr",
  "y a J",
  "avaSc",
  "ript ",
  "examp",
  "le:",
  
"

"
,
  "",
  
"   [2m\`\`\`javascript[22m
"
,
  "   fu",
  "nctio",
  "n cal",
  "culat",
  "eArea",
  "(radi",
  "us) {",
  
"
    "
,
  " retu",
  "rn Ma",
  "th.PI",
  " * ra",
  "dius ",
  "* rad",
  "ius;",
  
"
   }"
,
  
"
   
 "
,
  "  con",
  "sole.",
  "log(c",
  "alcul",
  "ateAr",
  "ea(5)",
  
");
  "
,
  " ",
  
"
   [2m\`\`\`[22m"
,
  "",
  "",
  "",
  "",
  "",
  "",
  
"
"
,
  "",
  "",
  
"
"
,
  "",
  "  â€¢ ",
  "Third",
  " item",
  "",
  "",
  "",
  "",
  
"

"
,
  "",
  
"[2m\`\`\`[22m
"
,
  "conso",
  "le.lo",
  "g("",
  "\`")",
  
"
[2m\`\`\`[22m"
,
  "",
  "",
  
"

"
,
  "",
  "",
  
"

"
,
  "",
  
"[2m\`\`\`javascript[22m
"
,
  "cons",
  "ole.l",
  "og(",
  "\`${foo",
  "}\`)",
  
"
[2m\`\`\`[22m"
,
  "",
  "",
  
"
"
,
  "",
  "",
  "",
  "",
]
`;
